#+title: Food database for meal planning
#+date: 2025-01-24T11:11:42+01:00
#+lastmod: 2025-01-24T11:11:42+01:00
# ISO 8601 date use output from
# C-u M-! date -Iseconds
#+draft: false
#+tags[]:

This article describes how to extract food data from USDA datasets.

# more

* Extract data from JSON

First, download datasets in JSON format from
https://fdc.nal.usda.gov/download-datasets

We use
https://fdc.nal.usda.gov/fdc-datasets/FoodData_Central_foundation_food_json_2024-10-31.zip
as an example.

Extract the contents.

First, ascertain nutrient ids by pretty printing the json:

#+begin_src sh
  jq < foundationDownload.json > found-food.json
  less found-food.json

  # or use grep
  grep -C3 Energy found-food.json | less
#+end_src

#+begin_example
{
  "FoundationFoods": [
    {
      "foodClass": "FinalFood",
      "description": "Hummus, commercial",
      "foodNutrients": [
        {
          "type": "FoodNutrient",
          "id": 2219707,
          "nutrient": {
            "id": 1120,
            "number": "334",
            "name": "Cryptoxanthin, beta",
            "rank": 7460,
            "unitName": "µg"
          },
...
#+end_example

Using grep
#+begin_example
--                                                                                                        
          "nutrient": {                                                                                   
            "id": 2047,                                                                                   
            "number": "957",                                                                              
            "name": "Energy (Atwater General Factors)",
            "rank": 280,                                                                                  
            "unitName": "kcal"                       
          },                                                                                              
--                                                                                                        
          "nutrient": { 
            "id": 2048,                                                                                   
            "number": "958",                         
            "name": "Energy (Atwater Specific Factors)",                                                  
            "rank": 290,                                                                                  
            "unitName": "kcal"                       
          },                                                                                              
--                                                                                                        
          "nutrient": {                                                                                   
            "id": 2047,                                                                                   
            "number": "957",                                                                              
            "name": "Energy (Atwater General Factors)",                                                   
            "rank": 280,                                                                                  
            "unitName": "kcal"                                                                            
          },                                         
--                                                   
          "nutrient": {                                                                                   
            "id": 2048,                              
            "number": "958",                                                                              
            "name": "Energy (Atwater Specific Factors)",                                                  
            "rank": 290,                             
            "unitName": "kcal"                                                                            
          },                                                                                              

#+end_example

We found that
| nutrient id | name                             | unitName        |
|-------------+----------------------------------+-----------------|
|        1008 | Energy                           | kcal = 4.184 kJ |
|        1062 | Energy                           | kJ              |
|        2047 | Energy (Atwater General Factors) | kcal = 4.184 kJ |
|        1003 | Protein                          | g               |
|        1004 | Total lipid (fat)                | g               |
|        1085 | Total fat (NLEA)                 | g               |
|        1005 | Carbohydrate, by difference      | g               |


Then filter the data with jq utility:
#+begin_src sh
jq '[
   .FoundationFoods.[] as $Food
   | $Food.foodNutrients as $Nutrients
   | {
        "0_foodCategory": $Food.foodCategory.description,
        "1_description": $Food.description,
        "2_energy": (($Nutrients.[] | select(.nutrient.id == 1008) | .amount) * 4.184 // ($Nutrients.[] | select(.nutrient.id == 2047) | .amount) * 4.184 // ($Nutrients.[] | select(.nutrient.id == 1062) | .amount) // 0) | floor,
        "3_protein":  (($Nutrients.[] | select(.nutrient.id == 1003) | .amount) // 0) | floor,
        "4_fat": (($Nutrients.[] | select(.nutrient.id == 1004) | .amount) // ($Nutrients.[] | select(.nutrient.id== 1085) | .amount) // 0) | floor,
        "5_carb": (($Nutrients.[] | select(.nutrient.id == 1005) | .amount) // 0) | floor
     }
    ]' foundationDownload.json > food-data.json
#+end_src
Note that we used =// 0= to handle the case where =select= fails and we used =floor= for the values.


Additionally, Calories can be calculated from the fact that Carbohydrates provide 4
calories per gram, protein provides 4 calories per gram, and fat
provides 9 calories per gram.

https://www.nal.usda.gov/programs/fnic

This will produce the following JSON
#+begin_example
[
  {
    "description": "Onions, white, raw",
    "energy": 35.0,
    "protein": 0.890,
    "fat": 0.130,
    "carb": 7.68
  },
  {
    "description": "Bananas, overripe, raw",
    "energy": 85.0,
    "protein": 0.730,
    "fat": 0.220,
    "carb": 20.1
  },
  {
    "description": "Bananas, ripe and slightly ripe, raw",
    "energy": 97.0,
    "protein": 0.740,
    "fat": 0.290,
    "carb": 23.0
  }
]
#+end_example

Finally, convert to CSV for further processing:
https://stackoverflow.com/a/32965227

#+begin_src sh
jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' < food-data.json > food-data.csv
#+end_src

* Processing CSV

Open =food-data.csv= file in gnumeric.


- Sort csv in ascending order by =0_foodCategory,1_description= column.

  Go to Menubar, Data, Sort.  Check "Region has a header option".  Use defaults otherwise.

- Before 2_energy column, insert 4 new columns for Chinese and German translations of food description and food category.

  If applicable, copy and paste from old spreadsheet.

- Data Source column should be the right-most column.

  If applicable, copy and paste from old spreadsheet.

- Header should now be in this order, this example is tab-separated CSV and can be pasted into gnumeric:

  #+begin_example
  Food Category	Sort English 100g	食品分类	每100克	Lebensmittelgruppen	Deutsch 100g	Energy kJ	Protein g	Fat g	Carb g	Data Source
  #+end_example

- Fill missing food data for oils:  Select entire spreadsheet, Go to Menubar, Data, Sort.  Check "Region has a header option".
  Sort by Data Source column by moving Data Source column to the top of sort order.

- Final sort, sort by food category, then by english name:
  Select entire spreadsheet, Go to Menubar, Data, Sort.  Check "Region has a header option".
  Move Data Source column to the bottom of sort order.


